#!/usr/bin/env python
import getpass
import requests
import os

username = ""
password = ""
albums = []


def get_album_count():
    """
    This will help us compute how many times we have to make an API call.
    """
    url = "http://%s.multiply.com/api/read.json?type=photos&password=%s" % (
        username, password)
    r = requests.post(url).json
    return r['total_items'] - 1


def get_album(album_index):
    """
    Accepts the album's index in our global list named albums.
    """
    album_key = albums[album_index]['value']['item_key']
    url = "http://%s.multiply.com/api/read.json?item_key=%s&password=%s" % (
        username, album_key, password)
    album = requests.post(url).json
    print "Album :\n%s" % album['subject']
    print "Description :\n%s" % album['body']
    print "Created date : %s" % album['created_date']
    print "Number of photos: %s" % album['num_photos']
    print "Number of replies: %s" % album['num_replies']
    print "Tags : "
    for tag in album['tags']:
        print "  - %s" % tag['tag']

    cont = raw_input("Are you sure you want to download this? (y/n) ")
    print cont
    if cont != 'y':
        exit(1)

    i = 0
    print "Photo URLs: "
    if os.path.exists(album['subject']):
        print "WARNING: The album already exists."
        print ("We'll start with the last failed download.")
        cont = raw_input("Continue? (y/n) ")
        if cont != 'y':
            exit(1)
    else:
        os.mkdir(album['subject'])

    for photo_item in album['photos']:
        i += 1
        filename = "%s/%03d.jpg" % (album['subject'], i)

        # Check if the file already exists.
        # This might be useful in case we want to retry
        # a failed download.
        if os.path.exists(filename):
            print "%s already exists. Skipping." % filename
            continue

        photo = photo_item['value']
        print "Downloading: %s - %03d/%03d" % (album['subject'], i, album['num_photos'])
        photo_dl = requests.get(photo['src'])

        with open(filename, "wb") as photo_file:
            photo_file.write(photo_dl.content)


def get_album_list(start):
    """
    Gets the list of photo albums.
    """
    url = "http://%s.multiply.com/api/read.json?type=photos&password=%s&start=%s" % (username, password, start)
    r = requests.post(url).json
    items = r['items']
    return items


def main():
    """
    Asks for the username and password and displays the user's
    list of albums.
    """
    global username
    global password
    global albums
    username = raw_input("Username: ")
    password = getpass.getpass("Password: ")

    album_count = get_album_count()
    print "You have %d albums." % album_count

    while (len(albums) != album_count):
        albums += get_album_list(len(albums))

    # Because normal people aren't used to 0-relative counts.
    i = 1
    for album_item in albums:
        album = album_item['value']
        print "%03d - %s (%d photos)" % (
            i, album['subject'], album['num_photos'])
        i = i + 1

    print("Enter the album #s you want to download. Separate with spaces.")
    albums_input = raw_input("Albums: ")
    target_albums = albums_input.split()
    download_count = len(target_albums)
    i = 0
    for target_album in target_albums:
        get_album(int(target_album) - 1)
        i += 1
        print "%03d/%03d albums downloaded." % (i, download_count)

if __name__ == "__main__":
    try:
        main()
    except requests.exceptions.ConnectionError as conn_err:
        print "There is a problem with your connection or Multiply."
        print "ERROR: %s" % conn_err
        print "Please try again. The download will continue where it ended."
